1. https://kr.vuejs.org/v2/examples/index.html 접속해서 Vue.js로 할 수 있는 기능을 살펴보자

2. Vue.js는 "데이터와 뷰를 연결해 주는 역할"
   MVVM(Model-View-ViewMode)
   Model(Vue 안에 준비된 데이터)과 View(HTML에서 표시되는 요소), 그리고  ViewModel(View와 Model을 어떻게 연결할까)로 나누어 생각하는 방식입니다.
  (1) 데이터는 무엇인가?(Model)
            웹 페이지에서 바뀌는 부분은 어디인가? 그러기 위해서 필요한 데이터를 생각할 것
  (2) 표시되는 요소는 무엇인가?(View)
           그 데이터가 HTML의 어느 부분에서 어떤 형식으로 표시되는가 생각할 것
  (3) 어떤 식으로 연결되는가?(ViewModel)
       HTML의 어디가 조작될 때 데이터가 어떤 형식으로 변화되는가 생각할 것   

3. 설치
  접속주소 : https://kr.vuejs.org/v2/guide/installation.html
   -> 왼쪽 메뉴 중 직접<script>에 추가하기 클릭
   
  (1) CDN(Content Delivery Network) 방식 
           네트워크에 공개된 라이브러리를 직접 읽어 들여 실행하는 방법입니다.         
          개발버전 "vue.js"와 프로덕션 버전 "vue.min.js"가 있습니다.
          개발용은 프로그램에 문제가 있을 경우 경고를 출력해 줍니다.
           프로덕션 버전은 배포된 사이트에서 사용하기 위해 속도에 최적화 되어 오류 메시지가 없습니다.      
          
      ① 최신 버전
        <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
        
      ②프로덕션 환경인 경우 새 버전에서 예상치 못한 오류를 방지하려면 특정 버전의 빌드 파일을 추가하는것을 추천합니다.
        <script src="https://cdn.jsdelivr.net/npm/vue@2.6.0"></script>
      
   (2) 직접<script>에 추가      
             개발 버전 클릭해서 다운로드 받습니다. 
             
4. Vue인스턴스 작성
   Vue.js로 SPA(Single Page Application)을 만드는 것은 먼저 Vue 인스턴스를 만드는 것부터 시작됩니다.
   Vue 인스턴스라는 것은 "SPA를 뒤에서 움직이게 하는 실체"라고 볼 수 있습니다. Vue인스턴스에 여러 옵션을 붙이는 것으로 SPA 기능이 동작하기 시작합니다.
   
5. 형식
   new Vue({Vue 인스턴스 내용})
   또는
   var 변수명 =  new Vue({Vue 인스턴스 내용})
   
   ① Vue 인스턴스에 먼저 el 옵션과 data 옵션이 있습니다.
     el 옵션은 어떤 HTML 요소와 연결할지를 지정합니다.
     HTML 중에 <태그명 id="el옵션에서 지정한 아이명">로 사용하면 그 요소와 연결됩니다.
   ② data 옵션에서는 어떤 데이터가 있는지를 지정합니다.
     data : {데이터 부분}
                       데이터 부분은 콜론을 기준으로 프로퍼티명과 값의 형식으로 작성합니다.
             Vue.js에서 데이터 이름을 프로퍼티라고 합니다. 여러개의 데이터를 작성할 경우 콤마로 구분하여 나열합니다.
             예) data : {limit:10,page:1}  
             
    ③ el 옵션에 연결한  id="app" 영역안에 data 옵션의 데이터를 출력해봅니다.
       {{프로퍼티명 }} 으로 표시하면 data의 프로퍼티명에 해당하는 값이 출력됩니다.
             이중 중괄호를 Mustache(머스태시)라고 합니다.     
             
             
6. 케밥 표기법, 카멜 표기법, 파스칼 표기법
   CSS의 'font-size'는 자바스크립트에서 'fontSize'로 표기
   (1) 케밥 표기법 : 하이픈(-)을 기준으로 복수의 단어 사이를 연결하는 방식
   (2) 카벨 표기법 : 복수의 안어를 연결할 때 두번째 이후 단어의 시작은 대문자로 표기하는 방식
   (3) 파스칼 표기법 : 자바스크립트에서 클래스명 사용시 복수의 단어 시작을 모두 대문자로 표기하는 방식
                                   파스칼 언어에서 사용되면서 파스칼 표기법이라고 함.
                                   예)FontSize                                                